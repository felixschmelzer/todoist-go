name: Tag and Release on Push

on:
  push:
    branches:
      - main

jobs:
  tag_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history and tags

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      - name: Get current version
        id: get_version
        run: |
          # Get the most recent tag, fallback to v1.0.0 if none exist
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          echo "Current version is $TAG"
          # Ensure the tag is in the form v<major>.<minor>.<patch>
          if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            VERSION=${TAG#v}
            echo "Version extracted: $VERSION"
          else
            echo "Invalid version tag format. Using default version v1.0.0."
            VERSION="1.0.0"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          # Split the version into major, minor, and patch
          IFS='.' read -r major minor patch <<< "${{ steps.get_version.outputs.version }}"
          # Increment the patch version
          patch=$((patch + 1))
          # Reassemble the new version
          NEW_VERSION="v$major.$minor.$patch"
          echo "New version is $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check_tag
        run: |
          # Fetch remote tags
          git fetch --tags
          # Check if the tag already exists on the remote
          if git ls-remote --tags origin | grep -q "refs/tags/${{ steps.bump_version.outputs.version }}$"; then
            echo "Tag already exists."
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag does not exist."
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create new tag
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          git tag ${{ steps.bump_version.outputs.version }}
          git push origin ${{ steps.bump_version.outputs.version }}

      - name: Create release
        if: steps.check_tag.outputs.tag_exists == 'false'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.bump_version.outputs.version }}
          release_name: Release ${{ steps.bump_version.outputs.version }}
          body: |
            Automated release for version ${{ steps.bump_version.outputs.version }}
          draft: false
          prerelease: false